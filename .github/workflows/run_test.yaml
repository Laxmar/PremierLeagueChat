# name: Tests

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]
#   workflow_dispatch:

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-python@v4
#       with:
#         python-version: '3.12'
#     - name: Install Poetry
#       uses: snok/install-poetry@v1
#       with:
#         virtualenvs-create: true
#         virtualenvs-in-project: true
#         installer-parallel: true
#       #----------------------------------------------
#       #       load cached venv if cache exists
#       #----------------------------------------------
#     - name: Load cached venv
#       id: cached-poetry-dependencies
#       uses: actions/cache@v3
#       with:
#         path: .venv
#         key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
#       #----------------------------------------------
#       # install dependencies if cache does not exist
#       #----------------------------------------------
#     - name: Install dependencies
#       if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#       run: poetry install --no-interaction --no-root
#       #----------------------------------------------
#       #              Run Pyright
#       #----------------------------------------------
#     - name: Save Env path for Pyright
#       run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH
#     - name: Run Pyright
#       id: run-pyright
#       uses: jakebailey/pyright-action@v2
#       with:
#         version: 1.1.391
#     - name: Test package
#       run: |
#         ./run_tests.sh
